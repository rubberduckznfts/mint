{"version":3,"sources":["contracts/RubberDuckz.js","redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","redux/data/merkleProof.js","components/header.js","components/MinterLayout.js","App.js","components/fonts.js","components/theme.js","serviceWorker.js","index.js"],"names":["abi","initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","weth","name","totalSupply","cost","whitelistIsOn","error","ownNfts","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","onlyWhitelisted","walletOfOwner","console","log","connectFailed","updateAccount","getProof","address","hexAddress","keccak256","leafNodes","map","addr","MerkleTree","sortPairs","getHexProof","ConnectPage","props","spacing","showHead","alignItems","justifyContent","href","htmlWidth","htmlHeight","src","direction","base","md","px","py","mx","bg","useColorModeValue","w","xl","pr","h2","span","color","fontSize","textTransform","fontFamily","letterSpacing","textAlign","display","mt","p","lg","mb","sm","rounded","button","onClick","border","borderRadius","_hover","width","ml","alt","App","useDispatch","useSelector","useState","feedback","setFeedback","nftOwned","setClaimingNft","useDisclosure","isOpen","onOpen","onClose","document","body","style","URLSearchParams","window","location","search","get","claimNFTs","_amount","proof","mint","send","to","from","value","utils","toWei","toString","once","err","on","receipt","then","Minter","MintSection","contatore","setContatore","alignContent","maxW","e","preventDefault","handleClick","columns","boxSize","getData","Array","isArray","length","useEffect","ai","mainText","detectEthereumProvider","provider","ethereum","request","method","params","chainId","code","rpcUrl","Web3EthContract","setProvider","Web3","accounts","SmartContractObj","reload","isWhitelistOn","proofNotInWhitelist","proofIsInWhitelist","getNFTs","closeOnOverlayClick","isCentered","size","motionPreset","align","justify","wrap","minH","objectFit","Fonts","styles","theme","extendTheme","fonts","Boolean","hostname","match","ReactDOM","render","initialColorMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.bb464183.chunk.js","sourcesContent":["const abi = [{\n    \"inputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"_initBaseURI\",\n        \"type\": \"string\"\n    }, {\n        \"internalType\": \"string\",\n        \"name\": \"_initNotRevealedUri\",\n        \"type\": \"string\"\n    }, {\n        \"internalType\": \"uint256\",\n        \"name\": \"teamReserved\",\n        \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n}, {\n    \"anonymous\": false,\n    \"inputs\": [{\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n    }, {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"approved\",\n        \"type\": \"address\"\n    }, {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"Approval\",\n    \"type\": \"event\"\n}, {\n    \"anonymous\": false,\n    \"inputs\": [{\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n    }, {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n    }, {\n        \"indexed\": false,\n        \"internalType\": \"bool\",\n        \"name\": \"approved\",\n        \"type\": \"bool\"\n    }],\n    \"name\": \"ApprovalForAll\",\n    \"type\": \"event\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n    }, {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"approve\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"_mintAmount\",\n        \"type\": \"uint256\"\n    }, {\n        \"internalType\": \"bytes32[]\",\n        \"name\": \"_merkleproof\",\n        \"type\": \"bytes32[]\"\n    }],\n    \"name\": \"mint\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"_mintAmount\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"ownerMint\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"anonymous\": false,\n    \"inputs\": [{\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"previousOwner\",\n        \"type\": \"address\"\n    }, {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"newOwner\",\n        \"type\": \"address\"\n    }],\n    \"name\": \"OwnershipTransferred\",\n    \"type\": \"event\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"bool\",\n        \"name\": \"_state\",\n        \"type\": \"bool\"\n    }],\n    \"name\": \"pause\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"renounceOwnership\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"reveal\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n    }, {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n    }, {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"safeTransferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n    }, {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n    }, {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n    }, {\n        \"internalType\": \"bytes\",\n        \"name\": \"_data\",\n        \"type\": \"bytes\"\n    }],\n    \"name\": \"safeTransferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n    }, {\n        \"internalType\": \"bool\",\n        \"name\": \"approved\",\n        \"type\": \"bool\"\n    }],\n    \"name\": \"setApprovalForAll\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"_newBaseExtension\",\n        \"type\": \"string\"\n    }],\n    \"name\": \"setBaseExtension\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"_newBaseURI\",\n        \"type\": \"string\"\n    }],\n    \"name\": \"setBaseURI\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"_newCost\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"setCost\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"_newmaxMintAmount\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"setmaxMintAmountPlusOne\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"_maxSupply\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"setMaxSupply\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"bytes32\",\n        \"name\": \"_merkleroot\",\n        \"type\": \"bytes32\"\n    }],\n    \"name\": \"setMerkleRoot\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"_limit\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"setNftPerAddressLimitPlusOne\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"_notRevealedURI\",\n        \"type\": \"string\"\n    }],\n    \"name\": \"setNotRevealedURI\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"bool\",\n        \"name\": \"_state\",\n        \"type\": \"bool\"\n    }],\n    \"name\": \"setOnlyWhitelisted\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"anonymous\": false,\n    \"inputs\": [{\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n    }, {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n    }, {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"Transfer\",\n    \"type\": \"event\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n    }, {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n    }, {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"transferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"newOwner\",\n        \"type\": \"address\"\n    }],\n    \"name\": \"transferOwnership\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"withdraw\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n    }],\n    \"name\": \"addressMintedBalance\",\n    \"outputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n    }],\n    \"name\": \"balanceOf\",\n    \"outputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"baseExtension\",\n    \"outputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"baseURI\",\n    \"outputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"cost\",\n    \"outputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"getApproved\",\n    \"outputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n    }, {\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n    }],\n    \"name\": \"isApprovedForAll\",\n    \"outputs\": [{\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"maxMintAmountPlusOne\",\n    \"outputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"maxSupplyPlusOne\",\n    \"outputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"merkleroot\",\n    \"outputs\": [{\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"nftPerAddressLimitPlusOne\",\n    \"outputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"notRevealedUri\",\n    \"outputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"onlyWhitelisted\",\n    \"outputs\": [{\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"owner\",\n    \"outputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"ownerOf\",\n    \"outputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"paused\",\n    \"outputs\": [{\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"revealed\",\n    \"outputs\": [{\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"bytes4\",\n        \"name\": \"interfaceId\",\n        \"type\": \"bytes4\"\n    }],\n    \"name\": \"supportsInterface\",\n    \"outputs\": [{\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"tokenURI\",\n    \"outputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"_owner\",\n        \"type\": \"address\"\n    }],\n    \"name\": \"walletOfOwner\",\n    \"outputs\": [{\n        \"internalType\": \"uint256[]\",\n        \"name\": \"\",\n        \"type\": \"uint256[]\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n    }],\n    \"name\": \"whitelisted\",\n    \"outputs\": [{\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}];\nexport default abi;","const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n          account: action.payload.account,\n          smartContract: action.payload.smartContract,\n          weth: action.payload.weth,\n          web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n          errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;","const initialState = {\n  loading: false,\n  name: \"\",\n  totalSupply: 0,\n  cost: 0,\n  whitelistIsOn: true,\n  error: false,\n  errorMsg: \"\",\n  ownNfts: []\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n          error: false,\n          errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n          name: action.payload.name,\n          totalSupply: action.payload.totalSupply,\n          cost: action.payload.cost,\n          ownNfts: action.payload.ownNfts,\n          whitelistIsOn: action.payload.whitelistIsOn,\n          error: false,\n          errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n          error: true,\n          errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n\n\nexport const fetchData = (account) => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let name = await store\n        .getState()\n        .blockchain.smartContract.methods.name()\n        .call();\n      let whitelistIsOn = await store\n        .getState()\n        .blockchain.smartContract.methods.onlyWhitelisted()\n        .call();\n      //console.log(\"whitelistIsOn:\", whitelistIsOn);\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      let cost = await store\n        .getState()\n        .blockchain.smartContract.methods.cost()\n        .call();\n      let ownNfts = await store\n        .getState()\n        .blockchain.smartContract.methods.walletOfOwner(account)\n        .call();\n      //console.log(ownNfts);\n      //await ownNfts.map(getJsonForId);\n      //alert(ownNfts[0]);\n      dispatch(\n        fetchDataSuccess({\n          name,\n          totalSupply,\n          cost,\n          ownNfts,\n          whitelistIsOn\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\nimport abi from \"../../contracts/RubberDuckz\";\nimport detectEthereumProvider from '@metamask/detect-provider'\n// log\nimport {\n  fetchData\n} from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const provider = await detectEthereumProvider();\n    if (provider) {\n      const ethereum = window.ethereum;\n      //console.log('Ethereum successfully detected!')\n\n      // From now on, this should always be true:\n      // provider === window.ethereum\n\n      // Access the decentralized web!\n\n      // Legacy providers may only have ethereum.sendAsync\n      // Check if MetaMask is installed\n      // MetaMask injects the global API into window.ethereum\n\n      try {\n        // check if the chain to connect to is installed\n        await ethereum.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{\n            chainId: '0x13881'\n          }], // chainId must be in hexadecimal numbers\n        });\n      } catch (error) {\n        // This error code indicates that the chain has not been added to MetaMask\n        // if it is not, then install it into the user MetaMask\n        //https://rpc-mumbai.matic.today\n        if (error.code === 4902) {\n          try {\n            await ethereum.request({\n              method: 'wallet_addEthereumChain',\n              params: [{\n                chainId: '0x13881',\n                rpcUrl: 'https://rpc-mumbai.maticvigil.com/',\n              }, ],\n            });\n          } catch (addError) {\n            console.error(addError);\n          }\n        }\n        console.error(error);\n      }\n      Web3EthContract.setProvider(provider);\n      let web3 = new Web3(provider);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = 5777; //1337; //await ethereum.request({ method: \"net_version\", });\n        // const NetworkData = await SmartContract.networks[networkId];\n        if (1 == 1) {\n\n          const SmartContractObj = new Web3EthContract(\n            abi, \"0x4B2467B2C993bAc0f18A7ef2a54c0c8437A61Aa6\"\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(\"Change network to Ethereum\"));\n        }\n      } catch (err) {\n        console.log(err)\n        dispatch(connectFailed(\"Something went wrong\"));\n      }\n    } else {\n\n      // if the provider is not detected, detectEthereumProvider resolves to null\n      console.error('Please install MetaMask!')\n    }\n\n    // await ethereum.request({\n    //   method: \"eth_requestAccounts\",\n    // });\n\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({\n      account: account\n    }));\n    dispatch(fetchData(account));\n  };\n};","import keccak256 from \"keccak256\";\nimport MerkleTree from \"merkletreejs\";\n\nconst getProof = (address) => {\n\n    const addresses = [\n        \"0xF7FF641b7840e7B74c858fbc9b1795d3f2a33bD9\",\n        \"0x680E91F1181B07d9935FCf45419dfdD5265CC11B\",\n        \"0x5E36f5f04cCeE8a5736D9411061349f36067BbBD\",\n        \"0x2C512EEA0aC7b174e2b9e1F6a447b537d0D89e86\",\n        \"0x2B368de91937CEafbe9d8e96fe9156054DCA7EF2\",\n        \"0x000000000000000000000000000000000000dEaD\",\n    ]\n    const invalidAddresses = [\n        \"0x8B3bb8347da9eB3eB5fB12FB400298245695159b\",\n        \"0x1dD8E903CC9Dae9FBEC7F7b4213992B2F5deC395\",\n\n    ]\n    const hexAddress = keccak256(address);\n\n    const leafNodes = addresses.map((addr) => keccak256(addr));\n    const merkleTree = new MerkleTree(leafNodes, keccak256, {\n        sortPairs: true,\n    });\n\n\n    const hexProof = merkleTree.getHexProof(hexAddress);\n    return hexProof;\n}\n\nexport default getProof;","import React from \"react\";\nimport {\n    chakra,\n    Box,\n    useColorModeValue,\n    Stack,\n    Flex,\n    Link,\n    Image\n} from \"@chakra-ui/react\";\n\nconst HeadOne = (props) => {\n    return (\n        <Box bg=\"#F5C141\">\n            <Stack spacing={0} align={\"center\"}>\n                {/*  */}\n                {props.showHead !== \"no\" && (\n                    <Link href='https://www.rubberduckz.com/'>\n                        <Image src=\"https://static.wixstatic.com/media/485d82_fdd318b4086442239ce17c150acdf1b1~mv2.png\">\n\n                        </Image>\n                    </Link>\n                )}\n\n\n                {/* <Flex\n                    direction=\"column\"\n                    alignItems=\"center\"\n                    justifyContent=\"center\"\n\n                >\n                    <chakra.h1\n                        color=\"white\"\n                        fontSize=\"7xl\"\n                        textTransform=\"uppercase\"\n                        fontFamily='wf_e4b1e1e4405343d9ad0296011'\n                        letterSpacing=\"wide\"\n                        textAlign={['right']}\n                    >\n                        WELCOME TO\n                    </chakra.h1>\n                    <chakra.span\n                        color=\"#8f0100\"\n                        fontSize=\"7xl\"\n                        textTransform=\"uppercase\"\n                        fontFamily='wf_e4b1e1e4405343d9ad0296011'\n                        letterSpacing=\"wide\"\n                        mt={-14}\n                        textAlign={['right']}\n                    >\n                        THE FLOCK\n                    </chakra.span>\n                    <chakra.p\n                        pr={{ base: 0, lg: 16 }}\n                        mb={4}\n                        fontSize=\"lg\"\n                        color=\"#8f0100\"\n                        fontFamily='lulo-clean-w01-one-bold'\n                        letterSpacing=\"wider\"\n                    >\n                        PLEASE MINT YOUR\n                        RUBBER DUCKZ\n                    </chakra.p>\n\n\n                </Flex> */}\n\n            </Stack>\n        </Box>\n    );\n};\n\nexport default HeadOne;","import React from \"react\";\nimport {\n    chakra,\n    Box,\n    useColorModeValue,\n    Stack,\n    Image,\n    Flex,\n    Link,\n    VStack,\n} from \"@chakra-ui/react\";\n\nconst ConnectPage = (props) => {\n    //console.log(\"showHead\", props.showHead);\n    return ( <\n        VStack spacing = \"0\" >\n\n        {\n            props.showHead !== \"no\" && ( <\n                Box\n\n                alignItems = \"center\"\n                justifyContent = \"center\" >\n                <\n                Link href = 'https://www.rubberduckz.com/' >\n                <\n                Image htmlWidth = \"100%\"\n                htmlHeight = \"auto\"\n                src = \"https://static.wixstatic.com/media/485d82_fdd318b4086442239ce17c150acdf1b1~mv2.png\" >\n\n                <\n                /Image> <\n                /Link> <\n                /Box>\n            )\n        } <\n        Flex direction = {\n            {\n                base: \"column\",\n                md: \"row\"\n            }\n        }\n        px = {\n            8\n        }\n        py = {\n            4\n        }\n        mx = \"auto\"\n        bg = {\n            useColorModeValue(\"#F5C141\", \"gray.600\")\n        } >\n\n        <\n        Box w = {\n            {\n                base: \"full\",\n                md: 11 / 12,\n                xl: 9 / 12\n            }\n        }\n        mx = \"auto\"\n        pr = {\n            {\n                md: 24\n            }\n        }\n        alignItems = \"center\"\n        justifyContent = \"center\" >\n        <\n        chakra.h2 >\n        <\n        chakra.span color = \"white\"\n        fontSize = \"6xl\"\n        textTransform = \"uppercase\"\n        fontFamily = 'wf_e4b1e1e4405343d9ad0296011'\n        letterSpacing = \"wide\"\n        textAlign = {\n            ['center']\n        }\n        display = \"block\" > WELCOME TO < /chakra.span> <\n        chakra.span display = \"block\"\n        color = \"#8f0100\"\n        fontSize = \"6xl\"\n        textTransform = \"uppercase\"\n        fontFamily = 'wf_e4b1e1e4405343d9ad0296011'\n        letterSpacing = \"wide\"\n        mt = {\n            -14\n        }\n        textAlign = {\n            ['center']\n        } >\n        THE FLOCK <\n        /chakra.span> <\n        /chakra.h2> <\n        chakra.p pr = {\n            {\n                base: 0,\n                lg: 16\n            }\n        }\n        mb = {\n            4\n        }\n        fontSize = \"lg\"\n        color = \"#8f0100\"\n        fontFamily = 'lulo-clean-w01-one-bold'\n        letterSpacing = \"wider\" >\n        PLEASE MINT YOUR < br / > RUBBER DUCKZ <\n        /chakra.p> <\n        Stack direction = {\n            {\n                base: \"column\",\n                sm: \"row\"\n            }\n        }\n        mb = {\n            {\n                base: 4,\n                md: 8\n            }\n        }\n\n        alignItems = \"center\"\n        justifyContent = \"center\"\n\n        >\n        <\n        Box display = \"inline-flex\"\n        rounded = \"xl\" >\n        <\n        chakra.p >\n        <\n        chakra.button onClick = {\n            props.onClick\n        }\n        w = {\n            [\"full\", , \"auto\"]\n        }\n        display = \"inline-flex\"\n        alignItems = \"center\"\n        justifyContent = \"center\"\n        px = {\n            5\n        }\n        py = {\n            3\n        }\n        border = \"solid transparent\"\n        fontSize = \"6xl\"\n        textTransform = \"uppercase\"\n        fontFamily = 'wf_e4b1e1e4405343d9ad0296011'\n        rounded = \"xl\"\n        borderRadius = \"xl\"\n        color = \"white\"\n        bg = \"#8f0100\"\n        _hover = {\n            {\n                bg: \"brand.50\",\n            }\n        } >\n        <\n        chakra.span width = \"180px\" > CONNECT < /chakra.span> <\n        /chakra.button>\n\n        <\n        /chakra.p> <\n        /Box> <\n        /Stack> <\n        /Box> <\n        Box mt = {\n            {\n                base: \"0\",\n                md: \"-60px\"\n            }\n        }\n        ml = {\n            {\n                base: \"0\",\n                md: \"-150px\"\n            }\n        }\n        w = {\n            {\n                base: \"full\",\n                md: 10 / 12\n            }\n        }\n        textAlign = \"center\" >\n        <\n        Image htmlWidth = \"100%\"\n        htmlHeight = \"auto\"\n        src = \"https://static.wixstatic.com/media/485d82_3d2a9c62bc6e43c7bc953bec8380439b~mv2.png\"\n        alt = \"Welcome to the flock\" /\n        >\n        <\n        /Box> <\n        /Flex> <\n        /VStack>\n    );\n};\n\nexport default ConnectPage;","import React, {\n  useEffect,\n  useState\n} from \"react\";\nimport {\n  useDispatch,\n  useSelector\n} from \"react-redux\";\nimport {\n  connect\n} from \"./redux/blockchain/blockchainActions\";\nimport {\n  fetchData\n} from \"./redux/data/dataActions\";\nimport getProof from \"./redux/data/merkleProof\";\nimport {\n  chakra,\n  Box,\n  VStack,\n  Center,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalBody,\n  useDisclosure,\n  Flex,\n  Image,\n  SimpleGrid,\n  HStack,\n  Link\n} from '@chakra-ui/react';\nimport Sj from \"./components/callConnect\";\nimport HeadOne from \"./components/header\";\nimport ConnectPage from \"./components/MinterLayout\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [feedback, setFeedback] = useState(\"\");\n  let nftOwned = data.ownNfts;\n\n  const [claimingNft, setClaimingNft] = useState(false);\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure()\n  document.body.style = 'background: #F5C141;';\n  const queryParams = new URLSearchParams(window.location.search)\n  let showHead = queryParams.get(\"showHead\")\n\n\n  const getNFTs = (_amount) => {\n    const proof = getProof(blockchain.account);\n    //console.log(\"proof: \", proof);\n    //console.log(\"proof length: \", proof.length);\n    const isWhitelistOn = data.whitelistIsOn;\n    //console.log(\"getNfts whitelist:\", isWhitelistOn)\n    const proofNotInWhitelist = isWhitelistOn && (Array.isArray(proof) && proof.length === 0);\n    const proofIsInWhitelist = isWhitelistOn && (Array.isArray(proof) && proof.length > 0);\n    if (proofNotInWhitelist) {\n      //alert(\"WE are not in whitelist pre-sale\")\n      onClose();\n      setFeedback(\"This is a presale only for Whitelisted addresses. Please come back tomorrow for Public Sale.\");\n      setClaimingNft(false);\n    } else if (!isWhitelistOn || proofIsInWhitelist) {\n      let nftOwned = data.ownNfts;\n\n      if (Array.isArray(nftOwned) && nftOwned.length >= 2) {\n        setFeedback(\n          \"You have reached the Wallet limit for minting 2 Rubber Duckz\"\n        );\n        onClose();\n        setClaimingNft(false);\n      } else {\n        claimNFTs(_amount, proof);\n\n      }\n    }\n\n  }\n\n\n  const claimNFTs = (_amount, proof) => {\n\n    setClaimingNft(true);\n    //console.log(\"account: \", blockchain.account);\n    //alert(\"Proof is Right\")\n    blockchain.smartContract.methods\n      .mint(_amount, proof)\n      .send({\n\n        to: \"0x4B2467B2C993bAc0f18A7ef2a54c0c8437A61Aa6\",\n        from: blockchain.account,\n        value: blockchain.web3.utils.toWei((0.01 * _amount).toString(), \"ether\"),\n      })\n      .once(\"error\", (err) => {\n        //alert(\"WE have an error\")\n\n        onClose();\n        //console.log(err);\n        setFeedback(\"It seems the transaction was cancelled.\");\n        setClaimingNft(false);\n\n      }).on('receipt', function (receipt) {\n        // receipt example\n        //alert(\"WE have a receipt!\")\n\n        //console.log(receipt);\n\n      })\n      .then((receipt) => {\n        //alert(\"WE have done!\")\n\n        onClose();\n        setFeedback(\n          \"Quack Quack! You just minted \" + _amount + \" Rubber Duckz! Visit Opensea.io to view your randomly generated NFT!\"\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n\n\n  };\n\n  const Minter = (props) => {\n    const MintSection = (props) => {\n\n      const [contatore, setContatore] = useState(2);\n      return (\n\n\n        <VStack spacing=\"0\" alignContent=\"center\" justifyContent=\"center\">\n          {props.showHead !== \"no\" && (\n            <Box\n\n              alignItems=\"center\"\n              justifyContent=\"center\"\n            >\n              <Link href='https://www.rubberduckz.com/'>\n                <Image htmlWidth=\"100%\"\n                  htmlHeight=\"auto\"\n                  src=\"https://static.wixstatic.com/media/485d82_fdd318b4086442239ce17c150acdf1b1~mv2.png\">\n\n                </Image>\n              </Link>\n            </Box>\n          )}\n          <chakra.h2>\n            <chakra.span color=\"white\"\n              fontSize=\"6xl\"\n              textTransform=\"uppercase\"\n              fontFamily='wf_e4b1e1e4405343d9ad0296011'\n              letterSpacing=\"wide\"\n              textAlign={['center']}\n              display=\"block\">WELCOME TO</chakra.span>\n            <chakra.span\n              display=\"block\"\n              color=\"#8f0100\"\n              fontSize=\"6xl\"\n              textTransform=\"uppercase\"\n              fontFamily='wf_e4b1e1e4405343d9ad0296011'\n              letterSpacing=\"wide\"\n              mt={-14}\n              textAlign={['center']}\n            >\n              THE FLOCK\n            </chakra.span>\n          </chakra.h2>\n          <chakra.p\n            pr={{ base: 0, lg: 16 }}\n            mb={4}\n            fontSize=\"lg\"\n            color=\"#8f0100\"\n            fontFamily='lulo-clean-w01-one-bold'\n            letterSpacing=\"wider\"\n          >\n            PLEASE MINT YOUR<br /> RUBBER DUCKZ\n          </chakra.p>\n          <HStack maxW='180px' alignItems=\"center\"\n            justifyContent=\"center\">\n\n            <chakra.span color=\"#8f0100\"\n              fontSize=\"6xl\"\n              textTransform=\"uppercase\"\n              fontFamily='wf_e4b1e1e4405343d9ad0296011'\n              letterSpacing=\"wide\" onClick={() => {\n\n                setContatore(1);\n              }}>-</chakra.span>\n            <chakra.span color=\"#8f0100\"\n              fontSize=\"6xl\"\n              textTransform=\"uppercase\"\n              fontFamily='wf_e4b1e1e4405343d9ad0296011'\n              letterSpacing=\"wide\" textAlign={['right']}\n            >{contatore}</chakra.span>\n            <chakra.span color=\"#8f0100\"\n              fontSize=\"6xl\"\n              textTransform=\"uppercase\"\n              fontFamily='wf_e4b1e1e4405343d9ad0296011'\n              letterSpacing=\"wide\" onClick={() => {\n\n                setContatore(2);\n              }}>+</chakra.span>\n          </HStack>\n          <Box display=\"inline-table\" alignContent=\"center\" justifyContent=\"center\" textAlign=\"center\">\n            <chakra.button\n              onClick={(e) => {\n                e.preventDefault();\n                props.handleClick(contatore);\n              }}\n              w={[\"full\", , \"auto\"]}\n              display=\"inline-flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              px={5}\n              py={3}\n              border=\"solid transparent\"\n              fontSize=\"6xl\"\n              textTransform=\"uppercase\"\n              fontFamily='wf_e4b1e1e4405343d9ad0296011'\n              rounded=\"xl\"\n              borderRadius=\"xl\"\n              color=\"white\"\n              bg=\"#8f0100\"\n              _hover={{\n                bg: \"brand.50\",\n              }}\n            >\n              <chakra.span width=\"180px\">MINT</chakra.span>\n            </chakra.button>\n            {/* <chakra.a\n            onClick={(e) => {\n              e.preventDefault();\n              props.handleClick(contatore);\n            }}\n            mt={2}\n            py={8}\n            display=\"inline-flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            textTransform=\"uppercase\"\n            fontFamily='wf_e4b1e1e4405343d9ad0296011'\n            fontSize=\"4xl\"\n            px={5}\n            border=\"solid transparent\"\n            fontWeight=\"bold\"\n            w=\"full\"\n            rounded=\"lg\"\n            borderRadius=\"full\"\n            color=\"white\"\n            bg=\"#8f0100\"\n          >\n            <chakra.span width=\"180px\">MINT</chakra.span>\n\n          </chakra.a> */}\n            <chakra.p\n              pr={{ base: 0, lg: 16 }}\n              mb={4}\n              fontSize=\"4xl\"\n              color=\"#8f0100\"\n              fontFamily='wf_e4b1e1e4405343d9ad0296011'\n              letterSpacing=\"wider\"\n              textTransform=\"uppercase\"\n            >{props.totalSupply}/2000</chakra.p>\n          </Box>\n\n          <chakra.p\n            pr={{ base: 0, lg: 16 }}\n            mb={4}\n            fontSize=\"md\"\n            color=\"#8f0100\"\n            fontFamily='lulo-clean-w01-one-bold'\n            letterSpacing=\"wider\"\n            textTransform=\"uppercase\"\n          >{props.feedback}</chakra.p>\n\n\n        </VStack>\n      )\n\n    }\n\n    return (\n      <SimpleGrid\n        columns={{ base: 1, md: 2 }}\n        spacing={0}\n      >\n        <Flex\n          direction=\"column\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          px={{ base: 4, lg: 20 }}\n          py={4}\n        >\n          <MintSection\n            handleClick={props.handleClick}\n            totalSupply={props.totalSupply}\n            showHead={props.showHead}\n            feedback={props.feedback} />\n        </Flex>\n        <Box\n          mt={{ base: \"0\", md: \"-20px\" }}\n          ml={{ base: \"0\", md: \"-40px\" }}\n        >\n          <Image boxSize={'md'}\n            htmlWidth=\"100%\"\n            htmlHeight=\"auto\"\n            src=\"https://static.wixstatic.com/media/485d82_3d2a9c62bc6e43c7bc953bec8380439b~mv2.png\"\n\n\n\n            loading=\"lazy\"\n          />\n        </Box>\n      </SimpleGrid>\n    );\n  };\n\n\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n\n      dispatch(fetchData(blockchain.account));\n      nftOwned = data.ownNfts;\n      if (Array.isArray(nftOwned) && nftOwned.length >= 2) {\n        setFeedback(\n          \"You have reached the Wallet limit for minting 2 Rubber Duckz\"\n        );\n      }\n    }\n  };\n\n  useEffect(() => {\n\n    getData();\n  }, [blockchain.account]);\n\n  return (\n\n    <Box textAlign=\"center\"\n      fontSize=\"xl\"\n      bg=\"#F5C141\" >\n\n      {\n        blockchain.account === \"\" ||\n          blockchain.smartContract === null ? (<  VStack spacing={\n            2\n          }\n            ai={\n              \"center\"\n            } >\n            <  ConnectPage mainText=\"\"\n              showHead={showHead}\n              onClick={\n                (e) => {\n                  e.preventDefault();\n                  dispatch(connect());\n                  getData();\n                }\n              }\n            /> </VStack >\n\n\n        ) : (\n\n\n          <VStack alignItems=\"center\"\n            justifyContent=\"center\" spacing={\n              4\n            }>\n\n            <Minter handleClick={\n              (contatore) => {\n                onOpen()\n                getNFTs(contatore);\n                getData();\n              }\n            } totalSupply={data.totalSupply}\n              showHead={showHead}\n              feedback={feedback}></Minter>\n\n\n\n\n\n\n            <Modal closeOnOverlayClick={false}\n              isOpen={\n                isOpen\n              }\n              onClose={\n                onClose\n              }\n              isCentered size=\"xl\" motionPreset='slideInBottom' >\n              <ModalOverlay />\n              <ModalContent bg=\"#8f0100\" >\n\n                <ModalBody borderRadius='lg'>\n                  <Center bg=\"#8f0100\">\n                    <Flex\n                      align=\"center\"\n                      justify={{ base: \"center\", md: \"space-around\", xl: \"space-between\" }}\n                      direction={{ base: \"column-reverse\", md: \"row\" }}\n                      wrap=\"no-wrap\"\n                      minH=\"70vh\"\n                      px={8}\n                      mb={16}\n                    >\n                      <VStack >\n                        <Image boxSize='300px'\n                          objectFit='cover' borderRadius='15px' src=\"https://static.wixstatic.com/media/485d82_3d2a9c62bc6e43c7bc953bec8380439b~mv2.png\"></Image>\n                        <chakra.span fontSize=\"3xl\"\n                          textTransform=\"uppercase\"\n                          fontFamily='wf_e4b1e1e4405343d9ad0296011'\n                          letterSpacing=\"wide\" color=\"white\"> MINT IN PROGRESS </chakra.span>\n                      </VStack>\n\n\n                    </Flex>\n\n                  </Center>\n\n                </ModalBody> </ModalContent >\n            </Modal>\n\n\n          </VStack>\n        )\n      } </Box >\n  );\n}\n\nexport default App;","import * as React from 'react'\nimport { Global } from '@emotion/react'\n\nconst Fonts = () => (\n  <Global\n    styles={`\n@font-face {\n  font-display: block;\n  font-family: \"Helvetica-W01-Bold\";\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/f70da45a-a05c-490c-ad62-7db4894b012a.eot?#iefix\");\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/f70da45a-a05c-490c-ad62-7db4894b012a.eot?#iefix\") format(\"eot\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/c5749443-93da-4592-b794-42f28d62ef72.woff\") format(\"woff\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/73805f15-38e4-4fb7-8a08-d56bf29b483b.ttf\") format(\"truetype\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/874bbc4a-0091-49f0-93ef-ea4e69c3cc7a.svg#874bbc4a-0091-49f0-93ef-ea4e69c3cc7a\") format(\"svg\");\n}\n@font-face {\n  font-display: block;\n  font-family: \"Helvetica-W02-Bold\";\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/8c0d8b0f-d7d6-4a72-a418-c2373e4cbf27.eot?#iefix\");\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/8c0d8b0f-d7d6-4a72-a418-c2373e4cbf27.eot?#iefix\") format(\"eot\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/192dac76-a6d9-413d-bb74-22308f2e0cc5.woff\") format(\"woff\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/47584448-98c4-436c-89b9-8d6fbeb2a776.ttf\") format(\"truetype\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/375c70e5-6822-492b-8408-7cd350440af7.svg#375c70e5-6822-492b-8408-7cd350440af7\") format(\"svg\");\n}\n@font-face {\n  font-display: block;\n  font-family: \"Helvetica-LT-W10-Bold\";\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/9fe262dc-5a55-4d75-91a4-aed76bd32190.eot?#iefix\");\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/9fe262dc-5a55-4d75-91a4-aed76bd32190.eot?#iefix\") format(\"eot\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/0a3939d0-3833-4db3-8b85-f64c2b3350d2.woff\") format(\"woff\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/1b128d6d-126f-4c9c-8f87-3e7d30a1671c.ttf\") format(\"truetype\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/b791c850-fde1-48b3-adf0-8998d55b0866.svg#b791c850-fde1-48b3-adf0-8998d55b0866\") format(\"svg\");\n}\n@font-face {\n  font-display: block;\n  font-family: \"DIN-Next-W01-Light\";\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/3e0b2cd7-9657-438b-b4af-e04122e8f1f7.eot?#iefix\");\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/3e0b2cd7-9657-438b-b4af-e04122e8f1f7.eot?#iefix\") format(\"eot\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/bc176270-17fa-4c78-a343-9fe52824e501.woff\") format(\"woff\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/3516f91d-ac48-42cd-acfe-1be691152cc4.ttf\") format(\"truetype\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/d1b1e866-a411-42ba-8f75-72bf28e23694.svg#d1b1e866-a411-42ba-8f75-72bf28e23694\") format(\"svg\");\n}\n@font-face {\n  font-display: block;\n  font-family: \"DIN-Next-W02-Light\";\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/48e5a0e1-2d56-46e5-8fc4-3d6d5c973cbf.eot?#iefix\");\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/48e5a0e1-2d56-46e5-8fc4-3d6d5c973cbf.eot?#iefix\") format(\"eot\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/07d62b21-8d7a-4c36-be86-d32ab1089972.woff\") format(\"woff\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/c0050890-bbed-44b9-94df-2611d72dbb06.ttf\") format(\"truetype\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/9f774d17-c03a-418e-a375-34f3beecbc7a.svg#9f774d17-c03a-418e-a375-34f3beecbc7a\") format(\"svg\");\n}\n@font-face {\n  font-display: block;\n  font-family: \"DIN-Next-W10-Light\";\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/3d009cd7-c8fe-40c0-93da-74f4ea8c530b.eot?#iefix\");\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/3d009cd7-c8fe-40c0-93da-74f4ea8c530b.eot?#iefix\") format(\"eot\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/a9e95a29-98a7-404a-90ee-1929ad09c696.woff\") format(\"woff\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/0a7663fd-eae8-4e50-a67a-225271f8cceb.ttf\") format(\"truetype\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/58ae9be9-5d95-44b6-8b6c-e6da6a46822c.svg#58ae9be9-5d95-44b6-8b6c-e6da6a46822c\") format(\"svg\");\n}\n@font-face {\n  font-display: block;\n  font-family: \"Helvetica-W01-Roman\";\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/ea95b44a-eab7-4bd1-861c-e73535e7f652.eot?#iefix\");\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/ea95b44a-eab7-4bd1-861c-e73535e7f652.eot?#iefix\") format(\"eot\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/4021a3b9-f782-438b-aeb4-c008109a8b64.woff\") format(\"woff\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/669f79ed-002c-4ff6-965c-9da453968504.ttf\") format(\"truetype\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/d17bc040-9e8b-4397-8356-8153f4a64edf.svg#d17bc040-9e8b-4397-8356-8153f4a64edf\") format(\"svg\");\n}\n@font-face {\n  font-display: block;\n  font-family: \"Helvetica-W02-Roman\";\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/e4bd4516-4480-43df-aa6e-4e9b9029f53e.eot?#iefix\");\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/e4bd4516-4480-43df-aa6e-4e9b9029f53e.eot?#iefix\") format(\"eot\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/b56b944e-bbe0-4450-a241-de2125d3e682.woff\") format(\"woff\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/7da02f05-ae8b-43a1-aeb9-83b3c0527c06.ttf\") format(\"truetype\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/66cac56e-d017-4544-9d0c-f7d978f0c5c2.svg#66cac56e-d017-4544-9d0c-f7d978f0c5c2\") format(\"svg\");\n}\n@font-face {\n  font-display: block;\n  font-family: \"Helvetica-LT-W10-Roman\";\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/686a6a06-e711-4bd2-b393-8504a497bb3c.eot?#iefix\");\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/686a6a06-e711-4bd2-b393-8504a497bb3c.eot?#iefix\") format(\"eot\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/6f8d1983-4d34-4fa4-9110-988f6c495757.woff\") format(\"woff\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/7903ee3f-e9ab-4bdc-b7d2-d232de2da580.ttf\") format(\"truetype\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/9c58e9ea-fdea-4b9c-b0f9-0a2157389ed0.svg#9c58e9ea-fdea-4b9c-b0f9-0a2157389ed0\") format(\"svg\");\n}\n@font-face {\n  font-family: \"wf_b9cf1341b9ec4945852ac0f86\";\n  src: url(\"https://static.wixstatic.com/ufonts/d228b9_b9cf1341b9ec4945852ac0f86b827fc1/woff2/file.woff2\") format(\"woff2\"),\n    url(\"https://static.wixstatic.com/ufonts/d228b9_b9cf1341b9ec4945852ac0f86b827fc1/woff/file.woff\") format(\"woff\"),\n    url(\"https://static.wixstatic.com/ufonts/d228b9_b9cf1341b9ec4945852ac0f86b827fc1/ttf/file.ttf\") format(\"ttf\");\n}\n@font-face {\n  font-family: \"wf_e4b1e1e4405343d9ad0296011\";\n  src: url(\"https://static.wixstatic.com/ufonts/364126_e4b1e1e4405343d9ad02960110373431/woff2/file.woff2\") format(\"woff2\"),\n    url(\"https://static.wixstatic.com/ufonts/364126_e4b1e1e4405343d9ad02960110373431/woff/file.woff\") format(\"woff\"),\n    url(\"https://static.wixstatic.com/ufonts/364126_e4b1e1e4405343d9ad02960110373431/ttf/file.ttf\") format(\"ttf\");\n}\n\n@font-face {\n  font-display: block;\n  font-family: \"Lulo-Clean-W01-One-Bold\";\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/0163ac22-50a7-406e-aa64-c62ee6fbf3d7.eot?#iefix\");\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/0163ac22-50a7-406e-aa64-c62ee6fbf3d7.eot?#iefix\") format(\"eot\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/aee74cb3-c913-4b54-9722-6001c92325f2.woff2\") format(\"woff2\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/80de9d5d-ab5f-40ce-911b-104e51e93d7c.woff\") format(\"woff\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/1b46b05b-cfdd-4d82-8c2f-5c6cfba1fe60.ttf\") format(\"truetype\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/be340f0b-a2d4-41df-acb1-4dc124330a88.svg#be340f0b-a2d4-41df-acb1-4dc124330a88\") format(\"svg\");\n}\n@font-face {\n  font-family: \"Lulo-Clean-W05-One-Bold\";\n  src: url(\"//static.parastorage.com/services/santa-resources/resources/viewer/user-site-fonts/fonts/Lulo_Clean/v1/LuloCleanW05-OneBold.woff2\") format(\"woff2\"),\n    url(\"//static.parastorage.com/services/santa-resources/resources/viewer/user-site-fonts/fonts/Lulo_Clean/v1/LuloCleanW05-OneBold.woff\") format(\"woff\");\n}\n        `}\n  />\n)\n\nexport default Fonts;\n","import {\n    extendTheme,\n    theme as base,\n} from '@chakra-ui/react'\n\nconst theme = extendTheme({\n    fonts: {\n\n        body: `Helvetica-W01-Bold, Helvetica-W02-Bold, Helvetica-LT-W10-Bold, DIN-Next-W01-Light, DIN-Next-W02-Light, DIN-Next-W10-Light, Helvetica-W01-Roman, Helvetica-W02-Roman, Helvetica-LT-W10-Roman, wf_b9cf1341b9ec4945852ac0f86, wf_e4b1e1e4405343d9ad0296011, Lulo-Clean-W01-One-Bold, Lulo-Clean-W05-One-Bold, ${base.fonts?.body}`,\n    },\n})\n\nexport default theme","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ChakraProvider, ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Fonts from './components/fonts';\nimport theme from './components/theme';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/store\";\nimport {\n  Provider\n} from \"react-redux\";\nReactDOM.render(\n  <Provider store={store}>\n    <StrictMode>\n      <ChakraProvider theme={theme} >\n        <Fonts />\n        <ColorModeScript initialColorMode=\"dark\" />\n        <App />\n      </ChakraProvider>\n    </StrictMode>\n  </Provider>,\n  document.getElementById('dapp_minter')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}